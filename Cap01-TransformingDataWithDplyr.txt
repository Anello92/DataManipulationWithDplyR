DATA MANIPULATION WITH DPLYR

Dplyr verbs to explore and transform a dataset, explore and draw insights from data
select()
filter()
arrange()
mutate()

• Dataset from the 2015 United States Census
	A state is one of 50 regions within the United States (New York, California, Texas)
	A county is a subregion of one of those states (Los Angeles county in California)	

This dataset includes (40) information about people living in each county, such as:
population
unemployment rate
income
racial
gender

-----

To explore the data to find interesting observations, or rows:

#To see a few values from all the columns
glimpse(counties) 


#Extract particular variables from the counties dataset
•counties_selected <- counties %>%
	select(state, county, population, unemployment)

-----

#The arrange() verb sorts data based on one or more variables
•counties_selected %>%
	arrange(desc(population))

#The filter() vert extracts only particular observation from a dataset, based on a condition.
•counties_selected %>%
	arrange(desc(population)) %>%
	filter(state == "New York")

•counties_selected %>%
	arrange(desc(population)) %>%
	filter(unemployment < 6)

#Combining conditions
•counties_selected %>%
	arrange(desc(population)) %>%
	filter(state == "New York", unemployment < 6)

-----

Arranging observations

•counties_selected <- counties %>%
  select(state, county, population, private_work, public_work, self_employed)

# Add a verb to sort in descending order of public_work
counties_selected %>%
  arrange(desc(public_work))

-----

Filtering for conditions

•counties_selected <- counties %>%
  select(state, county, population)

# Filter for counties with a population above 1000000
•counties_selected %>%
  filter(population > 1000000)

# Filter for counties in the state of California that have a population above 1000000
•counties_selected %>%
  filter(state == "California",
         population > 1000000)

-----

Filtering and arranging

counties_selected <- counties %>%
  select(state, county, population, private_work, public_work, self_employed)

# Filter for Texas and more than 10000 people; sort in descending order of private_work
•counties_selected %>%
  filter(state == "Texas",
          population > 10000) %>%
          arrange(desc(private_work))

-----

MUTATE - Datasets dont always have the variable we need. We can use the mutate() verb to 
add new variable or change existing variables. 

The unemployment rate is given as a percentage, if we were intereste im the total number of 
unemployed people in a county, rather than as a percentage of the population.
• (population * unemployment) / 100

countises_selected %>% 
	mutate((unemployed_population = population * unemployment) / 100)


-----

Calculating the number of government employess

counties_selected <- counties %>%
  select(state, county, population, public_work)

# Add a new column public_workers with the number of people employed in public work
•counties_selected %>%
  mutate(public_workers = public_work * population / 100)

# Sort in descending order of the public_workers column
•counties_selected %>%
  mutate(public_workers = public_work * population / 100) %>%
  arrange(desc(public_workers))

-----

Calculating the percentage of women in a county

# Select the columns state, county, population, men, and women
•counties_selected <- counties %>%
  select(state, county, population, men, women)
counties_selected

# Calculate proportion_women as the fraction of the population made up of women
•counties_selected %>%
    mutate(proportion_women = women/population)

-----

Select, mutate, filter and arrange

counties %>%
  # Select the five columns 
  select(state, county, population, men, women) %>%
  # Add the proportion_men variable
  mutate(proportion_men = men/population) %>%
  # Filter for population of at least 10,000
  filter(population >= 10000) %>%
  # Arrange proportion of men in descending order 
  arrange(desc(proportion_men))
